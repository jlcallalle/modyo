{% snippet "vue_js" %}
{% snippet "axios_js" %}

var vm = new Vue({
	delimiters: ['${', '}'],
	data: function() {
		return {
			test: null,
			axios_api: null,
			token:null,
			testdos: null,

		};
	},
	mounted: function() {
		this.getTokenModyo();
this.getTokenModyotwo();

	},
	methods: {
		getTokenModyo: function () {
			var self = this;

			var data = JSON.stringify({});
			var axios_api = axios.create({
				baseURL: 'https://2h9w3datwc.execute-api.us-east-1.amazonaws.com/v1',
				headers: {
					'Content-Type': 'application/json',
					'Accept': 'application/json',
				},
			});
			var axios_auth = axios.create();
			axios_auth.defaults.baseURL = '{{site.baseUrl}}' + '/api/profile/me';

			var injectToken = async function(config) {
				try {
					var response = await axios_auth.get('');
					self.token = response.data.delegated_token.access_token;
					var newConfig = config;
					newConfig.headers = {
						Authorization: "Bearer " + response.data.delegated_token.access_token,
						"Accept": "application/json",
						"Content-Type": "application/json",
					};
					return newConfig;
				} catch (error) {
					throw new Error('Unauthorized');
				}
			}

			axios_api.interceptors.request.use(injectToken);

			axios_api.get('/mandato-unico/test').then(function (response) {
				console.log(response);
				self.test = response.data;
			});



		},
		getTokenModyotwo: function () {
			var self = this;

			var data = JSON.stringify({});
			var axios_api = axios.create({
				baseURL: 'https://serviciosqa.cnsv.cl/ws-mandato-unico/rest/MandatoUnico',
				headers: {
					'Content-Type': 'application/json',
					'Accept': 'application/json',
				},
			});
			var axios_auth = axios.create();
			axios_auth.defaults.baseURL = '{{site.baseUrl}}' + '/api/profile/me';

			var injectToken = async function(config) {
				try {
					var response = await axios_auth.get('');
					self.token = response.data.delegated_token.access_token;
					var newConfig = config;
					newConfig.headers = {
						Authorization: "Bearer " + response.data.delegated_token.access_token,
						"Accept": "application/json",
						"Content-Type": "application/json",
					};
					return newConfig;
				} catch (error) {
					throw new Error('Unauthorized');
				}
			}

			axios_api.interceptors.request.use(injectToken);

			axios_api.get("/test").then(function (response) {
				console.log(response);
				self.testdos = response.data;
			});



		},
	}
}).$mount('#test');
